name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24.5']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

    - name: Run go vet
      run: go vet ./...

  test-build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.5'

    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o mc-linux-amd64
        GOOS=windows GOARCH=amd64 go build -o mc-windows-amd64.exe
        GOOS=darwin GOARCH=amd64 go build -o mc-darwin-amd64
        GOOS=darwin GOARCH=arm64 go build -o mc-darwin-arm64

    - name: Test binaries
      run: |
        ./mc-linux-amd64 test || echo "Java not available in CI, expected failure"
        file mc-*

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.5'

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build
      run: go build -o mc

    - name: Test Java validation
      run: ./mc test

    - name: Test config creation
      run: |
        mkdir test-dir
        cd test-dir
        echo "1.21.4" | ../mc || true  # May fail due to network or Paper API
        test -f mc.yml && echo "✓ Config file created" || echo "⚠ Config test skipped"
        test -f eula.txt && echo "✓ EULA file created" || echo "⚠ EULA test skipped"
